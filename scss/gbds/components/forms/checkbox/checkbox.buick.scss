@use 'checkbox';
@use '../../../buick/colors';
@use '../../../buick/fonts';
@use '../../../utils/breakpoints' as bp;

.gb-checkbox {
	position: relative;

	label, /* Override Legacy Quantum Style*/
	input[type='checkbox'] + label {
		@include checkbox.base-label(
			colors.$brand-black,
			fonts.$font-family-avenir-next,
			16px,
			fonts.$font-weight-normal,
			0,
			1.5
		);

		margin: 0 5px;
		position: relative;
		top: 2px;

		@include bp.medium-and-above {
			font-size: 18px;
			line-height: 1.875;
		}
	}

	input[type='checkbox'] {
		$box-size: 20px;

		@include checkbox.base-box(20px);

		background: none;
		border: 2px solid colors.$grey-mid;
		margin: 3px;
		position: relative;

		&:checked {
			background: colors.$black-light;
			border: 2px solid colors.$black-light;

			&::after {
				border: 0;
				content: url('data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%3E%3Cg%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%3Cg%20fill%3D%22%23FFF%22%20fill-rule%3D%22nonzero%22%3E%3Cg%3E%3Cg%3E%3Cpath%20d%3D%22M18.23%206L8.981%2014.737%205.93%2011.729%204%2013.251%208.973%2018%2020%207.325z%22%20transform%3D%22translate(-336%20-211)%20translate(336%20201)%20translate(0%2010)%22%2F%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E');
				height: $box-size;
				left: -4px;
				position: absolute;
				top: -5px;
				width: $box-size;
			}
		}

		&.gb-alt-icon {
			&:checked {
				background-color: transparent;

				&::after {
					content: url('data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2220%22%20height%3D%2220%22%20fill%3D%22none%22%3E%3Cpath%20fill%3D%22%23282828%22%20fill-rule%3D%22evenodd%22%20d%3D%22M0%2020h20V0H0v20Z%22%20clip-rule%3D%22evenodd%22%2F%3E%3Cpath%20stroke%3D%22%23fff%22%20stroke-linecap%3D%22square%22%20stroke-width%3D%222%22%20d%3D%22M4.375%2010.313h10.938%22%2F%3E%3C%2Fsvg%3E');
					display: block;
					height: 20px;
					left: -1px;
					position: relative;
					top: -1px;
					width: 20px;
				}
			}
		}
	}

	&:hover {
		input[type='checkbox'] {
			background: colors.$grey-very-light;
			border-radius: 0;
			box-shadow: 0 0 0 5px colors.$grey-very-light;

			&:checked {
				background: colors.$black-light;
			}
		}
	}

	&.disabled {
		input[type='checkbox'] {
			background: none;
			border: 2px solid colors.$grey-very-light;

			&:checked {
				background: colors.$grey-very-light;
			}
		}

		&:hover {
			input[type='checkbox'] {
				border-radius: 0;
				box-shadow: none;

				&:checked {
					background: colors.$grey-very-light;
				}
			}
		}
	}

	.gb-comp-icon {
		display: inline-block;
		height: 24px;
		justify-content: center;
		left: 10px;
		padding: 4px;
		position: relative;
		vertical-align: middle;
		width: 24px;

		svg {
			bottom: 5px;
			height: inherit;
			max-width: inherit;
			position: relative;
			right: 10px;
			width: inherit;
		}

		&.brand-default {
			align-items: center;
			display: inline-flex;
			justify-content: center;

			&::after {
				bottom: 4px;
				content: url('data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2224%22%20height%3D%2225%22%20viewBox%3D%220%200%2024%2025%22%20fill%3D%22none%22%3E%0A%20%20%3Cpath%20d%3D%22M6.58555%208.98438L12.4777%2014.8537L18.4283%209.02963L20%2010.6076L12.4641%2017.9844L5%2010.5487L6.58555%208.98438Z%22%20fill%3D%22%232B2B2B%22%2F%3E%0A%20%20%3Cmask%20id%3D%22mask0_4796_69113%22%20style%3D%22mask-type%3Aluminance%22%20maskUnits%3D%22userSpaceOnUse%22%20x%3D%225%22%20y%3D%228%22%20width%3D%2215%22%20height%3D%2210%22%3E%0A%20%20%20%20%3Cpath%20d%3D%22M6.58555%208.98438L12.4777%2014.8537L18.4283%209.02963L20%2010.6076L12.4641%2017.9844L5%2010.5487L6.58555%208.98438Z%22%20fill%3D%22white%22%2F%3E%0A%20%20%3C%2Fmask%3E%0A%20%20%3Cg%20mask%3D%22url(%23mask0_4796_69113)%22%3E%0A%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E');
				display: block;
				height: 16px;
				position: relative;
				right: 10px;
				width: 16px;
			}
		}
	}
}

html[dir='rtl'] {
	.gb-checkbox {
		input[type='checkbox'] {
			&:checked::after {
				left: 0;
			}
		}
	}
}
