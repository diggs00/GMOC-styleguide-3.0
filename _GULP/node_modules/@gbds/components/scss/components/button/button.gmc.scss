@use 'button' as b;
@use '../../gmc/colors' as c;
@use '../../gmc/fonts' as f;
@use '../../gmc/icons' as i;

%button-icon-base {
	svg,
	img {
		height: i.$icon-small;
		vertical-align: middle;
		width: i.$icon-small;
	}

	&.icon-stacked {
		svg,
		img {
			display: block;
			height: i.$icon-large;
			margin: auto;
			width: i.$icon-large;
		}
	}

	&.icon-left {
		svg,
		img {
			margin-right: 1rem;
		}
	}

	&.icon-right {
		svg,
		img {
			margin-left: 1rem;
		}
	}
}

%gb-filter-button {
	@include b.filter-button(
		c.$grey-extra-light,
		0,
		c.$font,
		f.$font-family-muli,
		1.2rem,
		f.$font-weight-bold,
		normal,
		1.5,
		0 1rem 1rem 0,
		0.5rem 1rem,
		c.$grey-extra-light,
		c.$brand-black,
		20px,
		f.$font-weight-normal,
		0.5rem
	);
}

$transition: background 0.25s, border 0.25s, color 0.25s;

%gb-primary-button {
	@include b.primary-button(
		transparent,
		2px solid c.$brand-red,
		c.$brand-red,
		f.$font-family-muli,
		1.5rem,
		f.$font-weight-bold,
		.1667rem,
		1.4,
		1rem,
		$transition,
		c.$brand-red-darken,
		2px solid c.$brand-red-darken,
		c.$white
	);

	&.invert {
		@include b.button-invert(
			null,
			2px solid c.$brand-red-darken,
			c.$white,
			c.$brand-red-darken,
			c.$white
		);
	}

	// For Inline and Stacked Icon Styling
	@extend %button-icon-base;
}

%gb-secondary-button {
	@include b.secondary-button(
		transparent,
		2px solid c.$brand-black,
		c.$brand-black,
		f.$font-family-muli,
		1.5rem,
		f.$font-weight-bold,
		2px,
		1.4,
		1rem,
		$transition,
		c.$brand-black-lighten,
		2px solid c.$brand-black-lighten,
		c.$white
	);

	&.invert {
		@include b.button-invert(
			null,
			2px solid c.$white,
			c.$white,
			c.$white,
			c.$brand-black-lighten
		);
	}

	// For Inline and Stacked Icon Styling
	@extend %button-icon-base;
}

%gb-link {
	@include b.link(
		c.$brand-red,
		inherit,
		1.3rem,
		f.$font-weight-bold,
		.05rem,
		1.539,
		.5rem 0,
		c.$brand-red-darken
	);

	&.invert {
		@include b.link-invert(
			c.$white,
			c.$white-darken
		);
	}
}

%gb-icon-button {
	@extend %button-icon-base;
	color: c.$brand-black-lighten;
	display: inline-block;
	padding: 1rem;
	width: auto;

	&:hover {
		color: c.$brand-black;

		svg {
			fill: c.$brand-black;
		}
	}
}

%gb-list-item-primary {
	@include b.list-item-button(
		c.$brand-black-lighten,
		c.$white,
		f.$font-family-muli,
		1.458rem,
		1.458rem,
		1.458rem,
		f.$font-weight-bold,
		normal,
		0.1433,
		1px solid c.$font-light,
		none,
		0,
		2.5rem,
		2.5rem,
		2.5rem,
		$transition,
		c.$brand-black,
		none,
		c.$brand-black,
		none
	);

	&:hover {
		color: c.$white;
	}
}

%gb-list-item-description {
	@include b.list-item-description(
		.875rem,
		f.$font-family-muli,
		f.$font-weight-normal,
		normal,
		1.429,
		c.$grey
	);
}

%gb-primary-button-inline-icon {
	@extend %gb-primary-button;
}

%gb-primary-button-stacked-icon {
	@extend %gb-primary-button;
}

%gb-secondary-button-inline-icon {
	@extend %gb-secondary-button;
}

%gb-secondary-button-stacked-icon {
	@extend %gb-secondary-button;
}

.gb-primary-button {
	@extend %gb-primary-button;
}

.gb-secondary-button {
	@extend %gb-secondary-button;
}

.gb-link {
	@extend %gb-link;
}

.gb-filter-button {
	@extend %gb-filter-button;
}

.gb-list-item-primary {
	@extend %gb-list-item-primary;

	.gb-list-item-description {
		@extend %gb-list-item-description;
	}
}

.gb-icon-button {
	@extend %gb-icon-button;
}

.gb-primary-button-inline-icon {
	@extend %gb-primary-button-inline-icon;
}

.gb-primary-button-stacked-icon {
	@extend %gb-primary-button-stacked-icon;
}

.gb-secondary-button-inline-icon {
	@extend %gb-secondary-button-inline-icon;
}

.gb-secondary-button-stacked-icon {
	@extend %gb-secondary-button-stacked-icon;
}
