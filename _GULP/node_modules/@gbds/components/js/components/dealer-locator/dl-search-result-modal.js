var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { component, prop } from '../../core';
let DlSearchModal = class DlSearchModal extends HTMLElement {
    constructor() {
        super();
        this.dlDaysToLabels = {
            1: 'opensMondayAt',
            2: 'opensTuesdayAt',
            3: 'opensWednesdayAt',
            4: 'opensThursdayAt',
            5: 'opensFridayAt',
            6: 'opensSaturdayAt',
            7: 'opensSundayAt',
        };
    }
    createInner() {
        this.backEl = document.createElement("span");
        this.backEl.classList.add('gb-dl-modal-back');
        this.modalWrapper.appendChild(this.backEl);
        this.dealerNameEl = document.createElement("div");
        this.dealerNameEl.classList.add('gb-dl-modal-name');
        this.modalWrapper.appendChild(this.dealerNameEl);
        this.distanceEl = document.createElement('div');
        this.distanceEl.classList.add('gb-dl-modal-distance');
        this.modalWrapper.appendChild(this.distanceEl);
        this.addressContainer = document.createElement('div');
        this.addressContainer.classList.add('gb-dl-address-container');
        this.addressLineOneEl = document.createElement('div');
        this.addressLineOneEl.classList.add('gb-dl-modal-address-line-one');
        this.addressDetailsEl = document.createElement('div');
        this.addressDetailsEl.classList.add('gb-dl-modal-address-details');
        this.addressContainer.appendChild(this.addressLineOneEl);
        this.addressContainer.appendChild(this.addressDetailsEl);
        this.modalWrapper.appendChild(this.addressContainer);
        this.salesBlockEl = document.createElement('div');
        this.salesBlockEl.classList.add('gb-dl-modal-sales');
        this.modalWrapper.appendChild(this.salesBlockEl);
        this.serviceBlocklEl = document.createElement('div');
        this.serviceBlocklEl.classList.add('gb-dl-modal-service');
        this.modalWrapper.appendChild(this.serviceBlocklEl);
        this.availableServicesEl = document.createElement('div');
        this.availableServicesEl.classList.add('gb-dl-modal-available-services-container');
        this.modalWrapper.appendChild(this.availableServicesEl);
        this.modalWrapper.classList.add('hide');
    }
    updateStaticElements(dealerInfo, dealerLabels) {
        this.modalWrapper = document.querySelectorAll(".gb-dealer-details-modal").item(0);
        if (this.modalWrapper.innerHTML.length == 0) {
            this.createInner();
        }
        else {
            this.modalWrapper.innerHTML = '';
            this.createInner();
        }
        this.backEl.innerText = dealerLabels.backLabel;
        this.backEl.onclick = () => this.closeModal();
        this.dealerNameEl.innerText = dealerInfo.dealerName;
        this.distanceEl.innerText = dealerInfo.distance + " " + dealerLabels.distanceUnit;
        this.addressLineOneEl.innerText = dealerInfo.address.addressLine1;
        this.addressDetailsEl.innerText = this.addressDetails(dealerInfo);
        this.salesBlockEl.appendChild(this.returnTypeBlock(dealerInfo.generalContact, dealerInfo.generalOpeningHour, dealerLabels.salesLabel, dealerLabels));
        this.serviceBlocklEl.appendChild(this.returnTypeBlock(dealerInfo.generalContact, dealerInfo.serviceOpeningHour, dealerLabels.serviceLabel, dealerLabels));
        this.availableServicesEl.appendChild(this.returnAvailableServices(dealerInfo.services, dealerLabels));
        this.modalWrapper.style.display = 'inherit';
    }
    closeModal() {
        this.modalWrapper.innerHTML = '';
        this.modalWrapper.style.display = 'none';
        this.dealerSearchEl.style.display = 'block';
        this.resultsContainer.style.display = 'block';
    }
    addressDetails(dealerInfo) {
        return `${dealerInfo.address.cityName}, ${dealerInfo.address.countrySubdivisionCode}, ${dealerInfo.address.postalCode}`;
    }
    returnTypeBlock(contact, hours, label, dealerLabels) {
        if (typeof hours == 'undefined') {
            return new HTMLDivElement();
        }
        const todayHours = this.getHoursForToday(hours);
        let dealerCol = document.createElement('div');
        let dealerLabel = document.createElement('div');
        let dealerDepartment = document.createElement('div');
        dealerCol.classList.add('gb-dl-modal-dealer-column');
        dealerLabel.classList.add('gb-dl-modal-label');
        dealerLabel.innerText = label;
        dealerDepartment.classList.add('gb-dl-modal-dealer-department');
        dealerDepartment.appendChild(dealerLabel);
        let dealerPhone = document.createElement('div');
        dealerPhone.classList.add('gb-dl-modal-phone');
        dealerPhone.innerText = contact.phone1;
        dealerDepartment.appendChild(dealerPhone);
        dealerCol.appendChild(dealerDepartment);
        let dealerStatus = document.createElement('div');
        dealerStatus.classList.add('gb-dl-modal-status');
        let dealerOpen = document.createElement('span');
        dealerOpen.classList.add('gb-dl-modal-open');
        dealerOpen.innerText = dealerLabels.openUntil + " " + todayHours.openFrom;
        dealerStatus.append(dealerOpen);
        dealerCol.appendChild(dealerStatus);
        let dealerOpenList = document.createElement('div');
        dealerOpenList.classList.add('gb-dl-modal-hours-container');
        dealerOpenList.appendChild(this.returnHoursList(hours, dealerLabels));
        dealerCol.appendChild(dealerOpenList);
        return dealerCol;
    }
    returnHoursList(hours, dealerLabels) {
        let hoursList = document.createElement('ul');
        hoursList.classList.add('gb-dl-modal-hours-list');
        let dayCheck = [];
        let days = [1, 2, 3, 4, 5, 6, 7];
        let listEl, dayInt, dayLabel, hoursText;
        for (let i = 0; i < hours.length; i++) {
            for (let d = 0; d < hours[i].dayOfWeek.length; d++) {
                listEl = document.createElement('li');
                listEl.classList.add('gb-dl-modal-list-item-day-hours-container');
                dayInt = this.dlDaysToLabels[hours[i].dayOfWeek[d]];
                dayLabel = document.createElement('div');
                hoursText = document.createElement('div');
                dayLabel.innerText = dealerLabels[dayInt];
                hoursText.innerText = hours[i].openFrom + "-" + hours[i].openTo;
                dayLabel.classList.add("gb-dl-modal-list-item-day");
                hoursText.classList.add("gb-dl-modal-list-item-hour");
                listEl.appendChild(dayLabel);
                listEl.appendChild(hoursText);
                dayCheck.push(hours[i].dayOfWeek[d]);
                hoursList.appendChild(listEl);
            }
        }
        if (days.find(val => !dayCheck.includes(val)) > 0) {
            listEl = document.createElement('li');
            dayInt = this.dlDaysToLabels[days.find(val => !dayCheck.includes(val))];
            dayLabel = document.createElement('div');
            hoursText = document.createElement('div');
            dayLabel.innerText = dealerLabels[dayInt];
            hoursText.innerText = dealerLabels.closed;
            listEl.appendChild(dayLabel);
            listEl.appendChild(hoursText);
            hoursList.appendChild(listEl);
        }
        return hoursList;
    }
    returnAvailableServices(services, dealerLabels) {
        let servicesBlock = document.createElement('div');
        servicesBlock.classList.add('gb-dl-modal-available-services');
        let servicesLabel = document.createElement('span');
        servicesLabel.classList.add('gb-dl-modal-service-label');
        let servicesList = document.createElement('ul');
        servicesList.classList.add('gb-dl-modal-services-list');
        servicesLabel.innerText = dealerLabels.serviceLabel;
        servicesBlock.appendChild(servicesLabel);
        for (let s = 0; s < services.length; s++) {
            let serviceListItem = document.createElement('li');
            serviceListItem.classList.add('gb-dl-modal-service');
            serviceListItem.innerText = services[s].name;
            servicesList.appendChild(serviceListItem);
        }
        servicesBlock.appendChild(servicesList);
        return servicesBlock;
    }
    get today() {
        const now = new Date().getDay();
        return now === 0 ? 7 : now;
    }
    getHoursForToday(hours) {
        return hours.find(h => h.dayOfWeek.includes(this.today));
    }
    get dealerSearchEl() {
        return document.querySelector('gb-dl-search');
    }
    get resultsContainer() {
        return document.querySelector('.q-dealer-results-container');
    }
};
__decorate([
    prop('object')
], DlSearchModal.prototype, "dealerInfo", void 0);
__decorate([
    prop('object')
], DlSearchModal.prototype, "dealerLabels", void 0);
__decorate([
    prop('object')
], DlSearchModal.prototype, "searchResult", void 0);
DlSearchModal = __decorate([
    component('gb-dl-search-result-modal')
], DlSearchModal);
export { DlSearchModal };
