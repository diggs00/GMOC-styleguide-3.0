var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { component, prop } from '../../core';
let DlSearchResultDetail = class DlSearchResultDetail extends HTMLElement {
    constructor() {
        super();
        this.template = `
	<div class="gb-dl-result-service"></div>
	<div class="gb-dl-result-phone"></div>
	<div class="gb-dl-result-open-status"><span class="gb-dl-result-open"></span><span class="gb-dl-result-time"></span></div>
	<a class="gb-primary-button"></a>
	`;
    }
    onInit() {
        this.innerHTML = this.template;
        this.initializeStaticElements();
        this.updateStaticElements();
    }
    initializeStaticElements() {
        this.offersButton = this.querySelector('a.gb-primary-button');
        this.openStatusEl = this.querySelector('.gb-dl-result-open-status');
        if (!this.serviceOpen)
            this.openStatusEl.classList.add('gb-dl-result-closed');
        this.phoneEl = this.querySelector('.gb-dl-result-phone');
        this.timeEl = this.querySelector('.gb-dl-result-time');
        this.serviceEl = this.querySelector('.gb-dl-result-service');
        if (this.phoneEl != null && this.serviceEl != null) {
            this.openEl = this.querySelector('.gb-dl-result-open');
        }
        else {
            this.openStatusEl.classList.add('gb-dl-result-closed');
        }
        if (this.website) {
            this.websiteEl = document.createElement('a');
            this.websiteEl.classList.add('gb-dl-result-website');
            this.websiteEl.setAttribute('target', '_blank');
            this.insertBefore(this.websiteEl, this.offersButton);
        }
    }
    updateStaticElements() {
        this.offersButton.href = this.offersLink;
        this.offersButton.innerText = this.offersButtonText;
        this.openEl.innerText = this.openText;
        this.phoneEl.innerHTML = "<a href='tel:" + this.servicePhone + "'>" + this.servicePhone + '</a>';
        this.timeEl.innerText = this.time;
        this.serviceEl.innerText = this.serviceLabel;
        if (this.website && this.dealerWebsiteLabel) {
            this.websiteEl.href = this.website;
            this.websiteEl.innerText = this.dealerWebsiteLabel;
        }
    }
};
__decorate([
    prop()
], DlSearchResultDetail.prototype, "openText", void 0);
__decorate([
    prop()
], DlSearchResultDetail.prototype, "offersButtonText", void 0);
__decorate([
    prop()
], DlSearchResultDetail.prototype, "offersLink", void 0);
__decorate([
    prop()
], DlSearchResultDetail.prototype, "serviceLabel", void 0);
__decorate([
    prop('boolean')
], DlSearchResultDetail.prototype, "serviceOpen", void 0);
__decorate([
    prop()
], DlSearchResultDetail.prototype, "servicePhone", void 0);
__decorate([
    prop()
], DlSearchResultDetail.prototype, "time", void 0);
__decorate([
    prop()
], DlSearchResultDetail.prototype, "website", void 0);
__decorate([
    prop()
], DlSearchResultDetail.prototype, "dealerWebsiteLabel", void 0);
DlSearchResultDetail = __decorate([
    component('gb-dl-search-result-detail')
], DlSearchResultDetail);
export { DlSearchResultDetail };
