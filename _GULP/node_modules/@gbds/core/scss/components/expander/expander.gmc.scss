@use '../../common/common' as com;

@use 'expander' as e;
@forward 'expander';
@use '../../gmc/colors' as c;
@use '../../gmc/fonts' as f;
@use '../../utils/breakpoints' as bp;

.gb-expander {
	@extend %expander-base;

	>.gb-expander-btn {
		@include e.expander-btn(
			c.$brand-red,
			c.$white,
			f.$font-family-muli,
			calc(0.9375 * #{com.$gmux-base-font}),
			f.$font-weight-bold,
			2px,
			1.4,
			calc(0.563 * #{com.$gmux-base-font}) 0 calc(0.563 * #{com.$gmux-base-font}) calc(1.873 * #{com.$gmux-base-font}),
			25px,
			c.$white,
			f.$font-weight-xbold
		);

		border: 2px solid c.$brand-red;
		margin-bottom: 1px;

		&:hover {
			@include e.expander-btn-hover(c.$brand-red-darken, c.$brand-red-darken, c.$white, null);
		}

		@include bp.medium-and-above {
			font-size: calc(1.03125 * #{com.$gmux-base-font});
			padding: calc(0.594 * #{com.$gmux-base-font}) 0 calc(0.594 * #{com.$gmux-base-font}) calc(1.375 * #{com.$gmux-base-font});
		}
	
		@include bp.large-and-above {
			font-size: calc(1.125 * #{com.$gmux-base-font});
			padding: calc(0.75 * #{com.$gmux-base-font}) calc(1.5 * #{com.$gmux-base-font});
		}
	}

	/* For Open / Close Animation*/
	>.gb-expander-content {
		@include e.expander-content(height .3s ease);
	}

	&.active {
		>.gb-expander-btn {
			@include e.expander-btn-active(c.$brand-red-darken, c.$brand-red-darken, c.$white, c.$white);
		}

		>.gb-expander-content {
			height: auto;
			visibility: visible;
		}
	}

	&[data-disabled] {
		>.gb-expander-btn {
			@include e.expander-btn-disabled(0 0 calc(0.78125 * #{com.$gmux-base-font}), inherit);

			@include bp.medium-and-above {
				padding: 0 0 calc(0.8593 * #{com.$gmux-base-font});
			}
		
			@include bp.large-and-above {
				padding: 0 0 calc(0.9375 * #{com.$gmux-base-font});
			}
		}

		>.gb-expander-content {
			height: auto;
			visibility: visible;
		}
	}

	/*Classes if consumer wants a more control of when expander is active or disabled*/
	@include bp.small-only {
		&.gb-active-sm {
			>.gb-expander-btn {
				@include e.expander-btn-active(c.$brand-red-darken, c.$brand-red-darken, c.$white, c.$white);
			}
	
			>.gb-expander-content {
				height: auto;
				visibility: visible;
			}
		}

		&.gb-disabled-sm {
			>.gb-expander-btn {
				@include e.expander-btn-disabled(0 0 calc(0.78125 * #{com.$gmux-base-font}), inherit);
			}
	
			>.gb-expander-content {
				height: auto;
				visibility: visible;
			}
		}
	}

	@include bp.medium-only {
		&.gb-active-med {
			>.gb-expander-btn {
				@include e.expander-btn-active(c.$brand-red-darken, c.$brand-red-darken, c.$white, c.$white);
			}
	
			>.gb-expander-content {
				height: auto;
				visibility: visible;
			}
		}

		&.gb-disabled-med {
			>.gb-expander-btn {
				@include e.expander-btn-disabled(0 0 calc(0.8593 * #{com.$gmux-base-font}), inherit);
			}
	
			>.gb-expander-content {
				height: auto;
				visibility: visible;
			}
		}
	}

	@include bp.large-and-above {
		&.gb-active-lg {
			>.gb-expander-btn {
				@include e.expander-btn-active(c.$brand-red-darken, c.$brand-red-darken, c.$white, c.$white);
			}
	
			>.gb-expander-content {
				height: auto;
				visibility: visible;
			}
		}

		&.gb-disabled-lg {
			>.gb-expander-btn {
				@include e.expander-btn-disabled(0 0 calc(0.9375 * #{com.$gmux-base-font}), inherit);
			}
	
			>.gb-expander-content {
				height: auto;
				visibility: visible;
			}
		}
	}

	h1,
	h2,
	h3,
	h4,
	h5,
	h5,
	h6 {
		margin: 0;
		padding: 0;
	}
}

